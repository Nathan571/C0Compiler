/* Copyright (c) 2016, Shianqi, Inc.
 * All rights reserved.
 */

options {
  LOOKAHEAD = 1;
  CHOICE_AMBIGUITY_CHECK = 2;
  OTHER_AMBIGUITY_CHECK = 1;
  STATIC = true;
  DEBUG_PARSER = false;
  DEBUG_LOOKAHEAD = false;
  DEBUG_TOKEN_MANAGER = false;
  ERROR_REPORTING = true;
  JAVA_UNICODE_ESCAPE = false;
  UNICODE_INPUT = false;
  IGNORE_CASE = false;
  USER_TOKEN_MANAGER = false;
  USER_CHAR_STREAM = false;
  BUILD_PARSER = true;
  BUILD_TOKEN_MANAGER = true;
  SANITY_CHECK = true;
  FORCE_LA_CHECK = false;
}

PARSER_BEGIN(Compiler)

/** Simple brace matcher. */
public class Compiler {

  /** Main entry point. */
  public static void main(String args[]) throws ParseException {
    Compiler parser = new Compiler(System.in);
    parser.Input();
  }

}

PARSER_END(Compiler)

//-----------------------------
/** int */
void Int_CC():
{}
{
    "int"
}

/** id */
void Id_CC():
{}
{
    "id"
}

/** void */
void Void_CC():
{}
{
    "void"
}
//-----------------------------

/** 输入过滤. */
void Input_CC() :
{}
{
  Program_CC() ("\n"|"\r")* <EOF>
}

/** 程序入口. */
void Program_CC() :
{}
{
    //[<变量定义部分>] {<自定义函数定义部分>} <主函数>
    [VarDefinition_CC()] ( FunctionDefinition_CC() )* MainFunction_CC()
}

/** 变量定义部分. */
void VarDefinition_CC() :
{}
{
    //int id {, id};
    Int_CC()Id_CC() ("," Id_CC())*
}

/** 自定义函数定义部分. */
void FunctionDefinition_CC() :
{}
{
    //( int id | void id) '(' ')' <分程序>
    (Int_CC() Id_CC()|Void_CC() Id_CC()) "(" ")" PartProgram_CC()
}

/** 主函数部分 */
void MainFunction_CC() :
{}
{
    //void main'(' ')' <分程序>
    Void_CC() "main" "(" ")" PartProgram_CC()
}

/** 分程序 */
void PartProgram_CC():
{}
{
    //'{' [<变量定义部分>] <语句序列> '}'
    "{" [VarDefinition_CC()] WordList_CC() "}"
}

/** 语句序列 */
void WordList_CC():
{}
{
    //<语句> {<语句>}
    Word_CC()(Word_CC())*
}

/** 语句 */
void Word_CC():
{}
{
    //<条件语句>｜<循环语句> | '{'<语句序列>'}' | <自定义函数调用语句> | <赋值语句> | <返回语句> | <读语句> | <写语句> | ;
    IfWord_CC() | ForWord_CC() | "{" WordList_CC() "}" | DefinitionFunctionCallWord_CC() | EvaluateWord_CC()
    | ReturnWord_CC() | ScanfWord_CC() | PrintfWord_CC() | ";"
}

/** 条件语句 */
void IfWord_CC():
{}
{
    //if '('<表达式>')' | <语句> [else <语句> ]
    ""
}

/** 循环语句 */
void ForWord_CC():
{}
{
    //while '(' <表达式>')' <语句>
    ""
}

/** 自定义函数调用语句 */
void DefinitionFunctionCallWord_CC():
{}
{
    //<自定义函数调用>
    ""
}

/** 赋值语句 */
void EvaluateWord_CC():
{}
{
    //id = <表达式>;
    ""
}

/** 返回语句 */
void ReturnWord_CC():
{}
{
    //return ['(' <表达式> ')'] ;
    ""
}

/** 读语句 */
void ScanfWord_CC():
{}
{
    //scanf '(' id ')';
    ""
}

/** 写语句 */
void PrintfWord_CC():
{}
{
    // printf '(' [ <表达式>] ')';
    ""
}

/** 表达式 */
void Expression_CC():
{}
{
    //[+｜-] <项> { (+｜-) <项>}
    ""
}

/** 项 */
void Sum_CC():
{}
{
    //<因子>｛(*｜/) <因子>｝
    ""
}

/** 因子 */
void Divisor_CC():
{}
{
    //id｜'(' <表达式>')' | num | <自定义函数调用>
    ""
}

/** 自定义函数调用 */
void DefinitionFunction_CC():
{}
{
    //id '(' ')'
    ""
}